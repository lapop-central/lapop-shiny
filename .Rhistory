left_join(response_labels,
by = c("column_name" = "column_name", "answer_measure" = "value")) %>%
mutate(answer_dimension = label,
# mutate(answer_dimension = if_else(column_name=="year"|is.na(label), #make sure year is ok for dropdown menu
#                                   label,
#                                   paste0(answer_measure, ": ", label)), # use this to produce value and label (e.g. "7: Strongly Agree")
answer_measure = if_else(is.na(value_recoded),answer_measure,value_recoded)
)
# hack to get better labels on crosstab
# group_by(column_name) %>%
# mutate(sortid=as.integer(as.factor(answer_measure))) %>%
# mutate(sortid=max(sortid,na.rm = T)-sortid) %>%
# ungroup() %>%
# mutate(answer_dimension = if_else(is.na(label_es),
#                                   label_es,
#                                   str_c('"',str_dup(" ",sortid), label_es,'"')),
#        sortid = NULL)
# Separate our q2 rows, add agegroup, then bind all together
common_only_q2 <-
total_long_common_recoded %>% filter(column_name == "q2") %>%
mutate(answer_dimension = as.character(cut(
as.numeric(answer_measure),
breaks = c(0, 25, 35, 45, 55, 65, Inf),
labels = c("18-25", "26-35", "36-45", "46-55", "56-65", "66-")
)))
# stacking back into full data
total_long_common_recoded <- total_long_common_recoded %>%
filter(column_name !="q2") %>%  #Only non-q2 rows left
bind_rows(common_only_q2)
total_long_common_recoded %>%
filter(column_name == 'q2') %>%
select(answer_measure,answer_dimension)
total_long_common_recoded %>%
filter(column_name == 'year') %>%
distinct(answer_measure)
total_long_common_narrow <- total_long_common_recoded %>%
left_join(questions_cats, by = "column_name") %>%
rename(category_short = paste0("category_short_",lang), question_short = paste0("question_short_",lang)) %>%
unite(category_question, category_short, question_short, sep = ":", remove = FALSE) %>%
unite(category_colname, category_short, column_name, sep = ":", remove = FALSE) %>%
select(country, person_id, weight1500, column_name, category_question, category_colname, question_short, column_name, answer_measure, answer_dimension)
measures <- c(
"a4",
"aoj11",
"aoj12",
"b1",
"b12",
"b13",
"b18",
"b2",
"b20",
"b20a",
"b21",
"b21a",
"b3",
"b31",
"b32",
"b37",
"b4",
"b47a",
"b6",
"cct1b",
"clien1n",
"clien1na",
"cp13",
"cp2",
"cp20",
"cp6",
"cp7",
"cp8",
"d1",
"d2",
"d3",
"d4",
"d5",
"d6",
"drk1",
"dst1b",
"e5",
"ed",
"eff1",
"eff2",
"env1c",
"env2b",
"etid",
"exc11",
"exc13",
"exc14",
"exc15",
"exc16",
"exc18",
"exc2",
"exc20",
"exc6",
"exc7",
"exc7new",
"fs2",
"fs8",
"gi0",
"gi0n",
"idio2",
"infrax",
"ing4",
"it1",
"jc10",
"jc13",
"jc15a",
"jc16a",
"l1",
"l1b",
"leng1",
"lib1",
"lib2c",
"m1",
"mil10a",
"mil10e",
"np1",
"ocup1a",
"ocup4a",
"pn4",
"pol1",
"prot3",
"q1",
"q10a",
"q10e",
"q10new",
"q11n",
"q12",
"q12bn",
"q12c",
"q14",
"q2",
"q3cn",
"q5a",
"q5b",
"r1",
"r12",
"r14",
"r15",
"r16",
"r18",
"r3",
"r4",
"r4a",
"r5",
"r6",
"r7",
"r8",
"redist1",
"redist2",
"redist2a",
"redist3",
"ros4",
"sd2new2",
"sd3new2",
"sd6new2",
"smedia1",
"smedia4",
"smedia7",
"soct2",
"vb10",
"vb2",
"vb20",
"vb50",
"vb51",
"vb52",
"vic1ext",
"vic1exta",
"w14a",
"wf1"
)
dimensions <- c(
"a4",
"aoj11",
"aoj12",
"b1",
"b12",
"b13",
"b18",
"b2",
"b20",
"b20a",
"b21",
"b21a",
"b3",
"b31",
"b32",
"b37",
"b4",
"b47a",
"b6",
"cct1b",
"clien1n",
"clien1na",
"cp13",
"cp2",
"cp20",
"cp6",
"cp7",
"cp8",
"d1",
"d2",
"d3",
"d4",
"d5",
"d6",
"drk1",
"dst1b",
"e5",
"ed",
"eff1",
"eff2",
"env1c",
"env2b",
"etid",
"exc11",
"exc13",
"exc14",
"exc15",
"exc16",
"exc18",
"exc2",
"exc20",
"exc6",
"exc7",
"exc7new",
"fs2",
"fs8",
"gi0",
"gi0n",
"idio2",
"infrax",
"ing4",
"it1",
"jc10",
"jc13",
"jc15a",
"jc16a",
"l1",
"l1b",
"leng1",
"lib1",
"lib2c",
"m1",
"mil10a",
"mil10e",
"np1",
"ocup1a",
"ocup4a",
"pn4",
"pol1",
"prot3",
"q1",
"q10a",
"q10e",
"q10new",
"q11n",
"q12",
"q12bn",
"q12c",
"q14",
"q2",
"q3cn",
"q5a",
"q5b",
"r1",
"r12",
"r14",
"r15",
"r16",
"r18",
"r3",
"r4",
"r4a",
"r5",
"r6",
"r7",
"r8",
"redist1",
"redist2",
"redist2a",
"redist3",
"ros4",
"sd2new2",
"sd3new2",
"sd6new2",
"smedia1",
"smedia4",
"smedia7",
"soct2",
"ur",
"vb10",
"vb2",
"vb20",
"vb50",
"vb51",
"vb52",
"vic1ext",
"vic1exta",
"w14a",
"wf1",
"year"
)
measure.df <-
total_long_common_narrow %>% # Include only measures (cols with recode)
filter(
column_name %in% measures
) %>%
pivot_wider(
id_cols = c(person_id, country,weight1500),
names_from = column_name,
values_from = answer_measure
) %>% rename_at(measures, ~ paste0(.,"_m"))
dimension.df <-
total_long_common_narrow %>% # Include only dimensions (cols with label or no recode )
filter(
column_name %in% dimensions
) %>%
pivot_wider(
id_cols = c(person_id, country,weight1500),
names_from = column_name,
values_from = answer_dimension
) %>% rename_at(dimensions, ~ paste0(.,"_d"))
measure.label.df <-
total_long_common_narrow %>% # Include only measures (cols with recode)
filter(
column_name %in% measures
) %>%
pivot_wider(
id_cols = c(person_id, country,weight1500),
names_from = column_name,
values_from = answer_dimension
) %>% rename_at(measures, ~ paste0(.,"_l"))
dimension.order.df <-
total_long_common_narrow %>% # Include only dimensions (cols with label or no recode )
filter(
column_name %in% dimensions
) %>%
pivot_wider(
id_cols = c(person_id, country,weight1500),
names_from = column_name,
values_from = answer_measure
) %>% rename_at(dimensions, ~ paste0(.,"_o"))
final_wide <- measure.df %>%
left_join(dimension.df, by = c("person_id", "country",'weight1500')) %>%
left_join(measure.label.df, by = c("person_id", "country",'weight1500')) %>%
left_join(dimension.order.df, by = c("person_id", "country",'weight1500'))
#tableau 2021.4 was not adequately recognizing slashes, just using year_o
final_wide$year_d <- final_wide$year_o
#manually change weights from Haiti 2012, which are messed up in the data files
# final_wide$weight1500[final_wide$country == "Haití" & final_wide$year_o == 2012] <- final_wide$weight1500[final_wide$country == "Haití" & final_wide$year_o == 2012] / (1557.148/1500)
# final_wide$weight1500[final_wide$country == "Haiti" & final_wide$year_o == 2012] <- final_wide$weight1500[final_wide$country == "Haiti" & final_wide$year_o == 2012] / (1557.148/1500)
table(final_wide$year_d)
# write_csv(final_wide, "lapop_wide_en_v2.csv", na = "NULL ")
write_csv(final_wide, paste0("lapop_wide_", lang,"_v5.csv"), na = "NULL ")
library(lapop)
library(ggplot2)
lapop_fonts()
library(shiny)
runApp("~/shinyapp")
runApp("C:/Users/plutowl/Documents/GitHub/lapop-shiny/shinyapp")
runApp('Documents/GitHub/lapop-shiny')
runApp('Documents/GitHub/lapop-shiny')
mpgData <- mtcars
mpgData
mpgData$am <- factor(mpgData$am, labels = c("Automatic", "Manual"))
mpgData
runApp('Documents/GitHub/lapop-shiny')
runApp('Documents/GitHub/lapop-shiny')
runApp('Documents/GitHub/lapop-shiny/app')
mpgData <- readstata13::read.dta13("C:/Users/plutowl/Box/LAPOP Shared/2_Projects/2023 AB/Core_Regional/Data Processing/GM/Grand Merge 2004-2023 LAPOP AmericasBarometer (v1.0s).dta")
shiny::runApp('Documents/GitHub/lapop-shiny/app')
runApp('Documents/GitHub/lapop-shiny/app')
ym23s$weight1500
ym23 <- readstata13::read.dta13("Shiny data/Merge 2023 LAPOP AmericasBarometer (v1.0s).dta")
select <- c("pais", "wave", "ing4", "vic1ext", "edre", "q1tc_r", "wealth", "edad", "weight1500")
ym23s <- ym23[select]
ym23s$weight1500
setwd("C:/Users/plutowl/Documents/GitHub/lapop-shiny")
ym23 <- readstata13::read.dta13("Shiny data/Merge 2023 LAPOP AmericasBarometer (v1.0s).dta")
select <- c("pais", "wave", "ing4", "vic1ext", "edre", "q1tc_r", "wealth", "edad", "weight1500")
ym23s <- ym23[select]
ym23s$weight1500
class(ym23s$weight1500)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
sum(is.na(ym23$ing4))
ym23s$ing4 * ym23s$weight1500
ym21 <- readstata13::read.dta13("Shiny data/Merged_LAPOP_AmericasBarometer_2021_v1.2.dta")
ym21$q1tb
ym23$q1tc_r
ym21$edr
ym21 <- readstata13::read.dta13("Shiny data/Merged_LAPOP_AmericasBarometer_2021_v1.2.dta")
select2 <- c("pais", "wave", "ing4", "vic1ext", "edr", "q1tb", "wealth", "edad")
ym21s <- ym23[select2]
ym21s <- ym21[select2]
select2 <- c("pais", "wave", "ing4", "vic1ext", "wealth", "edad")
ym21s <- ym21[select2]
table(ym23s$wt1500)
select2 <- c("pais", "wave", "ing4", "vic1ext", "wealth", "edad")
ym21s <- ym21[select2]
m <- rbind(ym23s, ym21s)
gm <- readstata13::read.dta13("Shiny data/gm2123.dta")
select <- c("pais", "wave", "ing4", "vic1ext", "wealth", "edad")
gms <- gm[select]
?lapop_ts
runApp('app')
outcome_var = mean(gms$ing4, na.rm = TRUE)
outcome_var
library(dplyr)
gms %>%
group_by(wave) %>%
summarise_at(vars(ing4), list(name = mean))
gms %>%
group_by(wave) %>%
summarise_at(vars(ing4), list(name = mean), na.rm = TRUE)
dta = gms %>%
group_by(wave) %>%
summarise_at(vars(ing4), list(name = mean), na.rm = TRUE)
dta$wave = as.character(dta$wave)
dta$proplabel = paste(as.character(round(dta$name), 0), "%", sep = "")
dta
dta
dta = gms %>%
group_by(wave) %>%
summarise_at(vars(ing4), list(name = mean), na.rm = TRUE)
dta$wave = as.character(dta$wave)
dta$proplabel = paste(as.character(round(dta$name), 0), "%", sep = "")
dta$lb = dta$name - 1
dta$ub = dta$name + 1
dta
dta$proplabel = paste(as.character(round(dta$name), 0))
dta$lb = dta$name - 1
dta$ub = dta$name + 1
names(dta)[2] = "prop"
dta
lapop_ts(dta)
lapop_ts(dta, ymin = 0, ymax = 7)
runApp('app')
dta = gms %>%
group_by(wave) %>%
summarise_at(vars(vic1ext), list(name = mean), na.rm = TRUE)
table(gms$vic1ext)
table(gms$vic1ext, gms$year)
table(gms$vic1ext, gms$wave)
table(as.numeric(gms$vic1ext), gms$wave)
dta = gms %>%
group_by(wave) %>%
summarise_at(vars(as.numeric(vic1ext)), list(name = mean), na.rm = TRUE)
table(gms$wave)
table(gms$vic1ext)
dta = gms %>%
group_by(wave) %>%
summarise_at(vars(as.numeric(vic1ext)), list(name = mean), na.rm = TRUE)
dta = gms %>%
group_by(wave) %>%
summarise_at(vars(vic1ext), list(name = mean), na.rm = TRUE)
ym21 <- readstata13::read.dta13("Shiny data/Merged_LAPOP_AmericasBarometer_2021_v1.2.dta", convert.factors = FALSE)
gm <- readstata13::read.dta13("Shiny data/gm2123.dta", convert.factors = FALSE)
select <- c("pais", "wave", "ing4", "vic1ext", "wealth", "edad")
gms <- gm[select]
dta = gms %>%
group_by(wave) %>%
summarise_at(vars(vic1ext), list(name = mean), na.rm = TRUE)
dta$wave = as.character(dta$wave)
dta$proplabel = paste(as.character(round(dta$name), 0))
dta
dta = gms %>%
group_by(wave) %>%
summarise_at(vars(vic1ext), list(name = mean), na.rm = TRUE)
dta$wave = as.character(dta$wave)
dta$proplabel = paste(as.character(round(dta$name), 0))
dta$lb = dta$name - 1
dta$ub = dta$name + 1
names(dta)[2] = "prop"
runApp('app')
runApp('app')
dta = gms %>%
group_by(wave) %>%
summarise_at(vars(ing4), list(name = mean), na.rm = TRUE)
dta
dta$wave = as.character(dta$wave)
dta$proplabel = paste(as.character(round(dta$name), 0))
dta$lb = dta$name - 1
dta$ub = dta$name + 1
names(dta)[2] = "prop"
dta
weighted.mean(gms$ing4, gms$weight1500)
weighted.mean(gms$ing4, gms$weight1500, na.rm = TRUE)
weighted.mean(x = gms$ing4, w = gms$weight1500, na.rm = TRUE)
weighted.mean(x = gms$ing4[!is.na(gms$ing4)], w = gms$weight1500[!is.na(gms$ing4)])
sum(is.na(gms$ing4))
sum(is.na(gms$weight1500))
weighted.mean(x = gms$ing4[!is.na(gms$ing4)], w = gms$weight1500[!is.na(gms$ing4)])
length(gms$ing4[!is.na(gms$ing4)])
length(gms$weight1500[!is.na(gms$ing4)])
length(gms$weight1500)
length(gms$wt)
gm <- readstata13::read.dta13("Shiny data/gm2123.dta", convert.factors = FALSE)
select <- c("pais", "wave", "ing4", "vic1ext", "wealth", "edad", "weight1500")
gms <- gm[select]
weighted.mean(x = gms$ing4[!is.na(gms$ing4)], w = gms$weight1500[!is.na(gms$ing4)])
dta = gms %>%
group_by(wave) %>%
summarise(weighted.mean(ing4, weight1500, na.rm = TRUE))
dta
dta = gms %>%
group_by(wave) %>%
summarise(prop = weighted.mean(ing4, weight1500, na.rm = TRUE))
dta
